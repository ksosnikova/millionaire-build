{"version":3,"sources":["navigation/routes.jsx","components/Button/Button.jsx","context.js","pages/GameFinish/index.jsx","pages/GameStart/index.jsx","components/Answer/Answer.jsx","components/AnswerProgress/AnswerProgress.jsx","pages/Game/index.jsx","navigation/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ROUTES","Object","freeze","START","GAME","FINISH","Button","text","path","to","className","NavLink","PropTypes","string","KeyContext","React","createContext","GameFinish","awardAmount","useContext","GameStart","Answer","answerOption","answer","isCorrect","lastQuestion","history","useHistory","keyQuestion","increaseKeyQuestion","resetKeyQuestion","useState","setClassName","useEffect","onClick","setTimeout","push","AnswerProgress","index","award","currentIndex","setCurrentAwardAmount","toString","replace","Game","list","json","arr","length","sortedList","sort","a","b","question","answers","map","item","key","type","id","htmlFor","Navigation","exact","App","setKeyQuestion","setAwardAmount","Provider","value","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45e15516.chunk.js","sourcesContent":["export const ROUTES = Object.freeze({\n  START: '/',\n  GAME: '/game',\n  FINISH: '/finish'\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from \"react-router-dom\";\nexport const Button = ({ text, path }) => {\n\n  return (\n    <NavLink to={path} className='btn'>{text}</NavLink>\n  );\n}\n\nNavLink.PropTypes = {\n  text: PropTypes.string,\n  path: PropTypes.string\n}\n\n","import React from \"react\";\n\nexport const KeyContext = React.createContext();","import React, { useContext } from 'react';\nimport { Button } from '../../components/Button/Button';\nimport { ROUTES } from '../../navigation/routes';\nimport { KeyContext } from '../../context';\n\nexport const GameFinish = () => {\n\n  const { awardAmount } = useContext(KeyContext);\n\n  return (\n    <div className=\"base-container\">\n      <div className=\"columns\">\n        <div className=\"image-holder\">\n          <div className=\"image\"/>\n        </div>\n        <div className=\"text-holder\">\n          <div>\n            <h3 className=\"text-total\">Total score: </h3>\n            <h2>${awardAmount}&nbsp;earned</h2>\n          </div>\n          <Button text={'Try again'} path={ROUTES.GAME} />\n        </div>\n      </div>\n      <div className=\"hexagon\"> </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Button } from '../../components/Button/Button';\nimport { ROUTES } from '../../navigation/routes';\n\nexport const GameStart = () => {\n\n  return (\n    <div className=\"base-container start\">\n      <div className=\"columns\">\n        <div className=\"image-holder\">\n          <div className=\"image\"/>\n        </div>\n        <div className=\"text-holder\">\n          <h1>Who wants to&nbsp;be a&nbsp;millionaire?</h1>\n          <Button text={'Start'} path={ROUTES.GAME} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { KeyContext } from '../../context';\nimport { useHistory } from 'react-router-dom';\n\nexport const Answer = ({ answerOption, answer, isCorrect, lastQuestion }) => {\n\n  const history = useHistory();\n\n  let { keyQuestion, increaseKeyQuestion, resetKeyQuestion } = useContext(KeyContext);\n\n  const [className, setClassName] = useState('hexagon-wrap md');\n\n  useEffect(() => {\n    setClassName('hexagon-wrap md');\n  }, [keyQuestion])\n\n  const checkAnswer = (answer) => {\n\n    if (isCorrect === true) {\n      setClassName(className + ' success');\n      if (keyQuestion !== lastQuestion) {\n        setTimeout(() => increaseKeyQuestion(), 1000);\n      } else {\n        history.push(\"/finish\");\n        resetKeyQuestion();\n      }\n    } else {\n      setClassName(className + ' danger');\n      setTimeout(() => {\n        history.push(\"/finish\");\n        resetKeyQuestion()\n      }, 1000);\n    }\n  }\n\n  return (\n\n    <li className={className}\n      onClick={() => {\n        setClassName(className + ' selected');\n        setTimeout(() => { checkAnswer(answer) }, 1000);\n      }}>\n      <div className=\"hexagon\">\n        <span className=\"hexagon-inner\">\n          <span className=\"answer-option\">{answerOption}</span>\n          <span>{answer}</span>\n        </span>\n      </div>\n    </li>\n\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { KeyContext } from '../../context';\n\nexport const AnswerProgress = ({ index, award, currentIndex }) => {\n\n  const { setCurrentAwardAmount } = useContext(KeyContext);\n\n  const [className, setClassName] = useState('hexagon-wrap xs');\n\n  const classToggle = () => {\n    if (index === currentIndex) {\n      setClassName(className + ' selected-style-2');\n      setCurrentAwardAmount(award);\n    }\n    if (index < currentIndex) {\n      setClassName('hexagon-wrap xs previous')\n    }\n  }\n\n  useEffect(() => {\n    classToggle();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentIndex]);\n\n  return (\n    <li className={className}>\n      <div className=\"hexagon\">\n        <span className=\"hexagon-inner\">\n          <span>${award.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\n        </span>\n      </div>\n    </li>\n  )\n}\n","import React, { useContext } from 'react';\nimport { Answer } from '../../components/Answer/Answer';\nimport { AnswerProgress } from '../../components/AnswerProgress/AnswerProgress';\nimport json from '../../json/qa.json';\nimport { KeyContext } from './../../context';\n\nexport const Game = () => {\n\n  const { keyQuestion } = useContext(KeyContext);\n\n  const list = json.arr;\n  const lastQuestion = list.length - 1;\n  const sortedList = list.sort((a, b) => a.award > b.award ? 1 : -1);\n\n  return (\n    <div className=\"game-holder\">\n      <div className=\"game-inner\">\n        <div className=\"question-area\">\n          <p className=\"question-title\">{sortedList[keyQuestion].question}</p>\n          <ul className=\"answers\">\n            {sortedList[keyQuestion].answers.map((item, index) =>\n              <Answer {...item} key={index} keyQuestion={keyQuestion} lastQuestion={lastQuestion} />)}\n          </ul>\n        </div>\n      </div>\n\n      <input type=\"checkbox\" id=\"menuToggle\" className=\"menu-toggle\" />\n      <label htmlFor=\"menuToggle\" className=\"menu-toggle-label\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </label>\n\n      <div className=\"progress\">\n        <ul className=\"progress-list\">\n          {sortedList.map((item, index) =>\n            <AnswerProgress key={index} index={index} {...item} currentIndex={keyQuestion} />)}\n        </ul>\n\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nimport { ROUTES } from './routes';\nimport { GameFinish } from '../pages/GameFinish/index';\nimport { GameStart } from '../pages/GameStart/index';\nimport { Game } from '../pages/Game/index';\n\nexport const Navigation = () => (\n  <Router>\n    <Switch>\n      <Route path={ROUTES.START} exact>\n        <GameStart />\n      </Route>\n      <Route path={ROUTES.GAME}>\n        <Game />\n      </Route>\n      <Route path={ROUTES.FINISH}>\n        <GameFinish />\n      </Route>\n      <Redirect to={ROUTES.START} />\n    </Switch>\n  </Router>\n) ","import React, { useState } from 'react';\nimport { Navigation } from './navigation';\nimport { KeyContext } from './context';\nimport './styles/styles.scss';\n\nfunction App() {\n\n  const [keyQuestion, setKeyQuestion] = useState(0);\n  const [awardAmount, setAwardAmount] = useState(0);\n\n  const increaseKeyQuestion = () => {\n    setKeyQuestion(prev => prev + 1);\n  }\n\n  const resetKeyQuestion = () => {\n    setKeyQuestion(0);\n  }\n\n  const setCurrentAwardAmount = (award) => {\n    setAwardAmount(award);\n  }\n\n  return (\n      <KeyContext.Provider value={{ keyQuestion, increaseKeyQuestion, resetKeyQuestion, awardAmount, setCurrentAwardAmount }}>\n        <Navigation />\n      </KeyContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}